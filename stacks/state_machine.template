AWSTemplateFormatVersion: "2010-09-09"
Description: State machine
Transform: AWS::Serverless-2016-10-31
# Parameters:
# TableName:
#   Type: String
# FFMPEGZipName:
#   Type: String
#   Default: ffmpeg.zip
# Boto3Layer:
#   Type: String
# PyUtilsLayer:
#   Type: String
# SupportFilesBucketName:
#   Type: AWS::SSM::Parameter::Value<String>
#   Default: SupportFilesBucketName
# StepFunctionName:
#   Type: AWS::SSM::Parameter::Value<String>
#   Default: StepFunctionName
# InputBucketName:
#   Type: AWS::SSM::Parameter::Value<String>
#   Default: InputBucketName
# CallSummarization:
#   Type: String
#   Default: DISABLED
# SummarizationSagemakerEndpointName:
#   Type: String
#   Default: ""
# SummarizationSagemakerEndpointArn:
#   Type: String
#   Default: ""
# SummarizationLLMThirdPartyApiKey:
#   Type: String
#   Description: "Secrets manager secret Arn containing the third party LLM API key\n"
#   Default: ""
# SummarizationLambdaFunctionArn:
#   Type: String
#   Default: ""
# SummarizationBedrockModelId:
#   Type: String
#   Default: ""
Globals:
  Function:
    Runtime: python3.11
    MemorySize: 1024
    Timeout: 60
# Conditions:
#   ProvisionedSageMakerEndpoint:
#     Fn::Equals:
#       - Ref: CallSummarization
#       - SAGEMAKER
#   HasCustomSummarizerLambda:
#     Fn::Equals:
#       - Ref: CallSummarization
#       - LAMBDA
#   HasAnthropicSummary:
#     Fn::Equals:
#       - Ref: CallSummarization
#       - ANTHROPIC
Resources:
  # FFMPEGLayer:
  #   Type: AWS::Lambda::LayerVersion
  #   Properties:
  #     Content:
  #       S3Bucket:
  #         Ref: SupportFilesBucketName
  #       S3Key:
  #         Ref: FFMPEGZipName
  TranscribeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - transcribe.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonTranscribeFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
  TranscribeLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonTranscribeFullAccess
      Policies:
        - PolicyName: PassRoleToTranscribe
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - Fn::GetAtt:
                      - TranscribeRole
                      - Arn
        - PolicyName: S3BucketReadWritePolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - Fn::Sub: arn:aws:s3:::${InputBucketName}
                  - Fn::Sub: arn:aws:s3:::${InputBucketName}/*
        - PolicyName: SSMGetParameterPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/*
#   SFStartTranscribeJob:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-start-transcribe-job.lambda_handler
#       EphemeralStorage:
#         Size: 4096
#       Timeout: 300
#       Layers:
#         - Ref: FFMPEGLayer
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           RoleArn:
#             Fn::GetAtt:
#               - TranscribeRole
#               - Arn
#           AWS_DATA_PATH: /opt/models
#       Role:
#         Fn::GetAtt:
#           - TranscribeLambdaRole
#           - Arn
#   SFExtractJobHeader:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-extract-job-header.lambda_handler
#       MemorySize: 1024
#       Timeout: 900
#       Layers:
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonTranscribeReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFExtractTranscriptHeader:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-extract-transcript-header.lambda_handler
#       MemorySize: 1024
#       Timeout: 900
#       Layers:
#         - Ref: Boto3Layer
#         - Ref: FFMPEGLayer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFProcessTurn:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-process-turn-by-turn.lambda_handler
#       MemorySize: 1024
#       Timeout: 900
#       Layers:
#         - Ref: FFMPEGLayer
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonTranscribeReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#         - arn:aws:iam::aws:policy/ComprehendFullAccess
#         - arn:aws:iam::aws:policy/AmazonKendraFullAccess
#   SFFinalProcessing:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-post-processing.lambda_handler
#       Layers:
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFCTRGenesys:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-ctr-genesys.lambda_handler
#       Layers:
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFPostCTRProcessing:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-post-ctr-processing.lambda_handler
#       Layers:
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFFetchTranscript:
#     Type: AWS::Serverless::Function
#     Properties:
#       Runtime: python3.11
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-fetch-transcript.lambda_handler
#       Timeout: 900
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   SFSummarize:
#     Type: AWS::Serverless::Function
#     Properties:
#       Runtime: python3.11
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-summarize.lambda_handler
#       Timeout: 900
#       Layers:
#         - Ref: PyUtilsLayer
#         - Ref: Boto3Layer
#       Environment:
#         Variables:
#           AWS_DATA_PATH: /opt/models
#           FETCH_TRANSCRIPT_LAMBDA_ARN:
#             Fn::GetAtt:
#               - SFFetchTranscript
#               - Arn
#           BEDROCK_MODEL_ID:
#             Ref: SummarizationBedrockModelId
#           SUMMARY_TYPE:
#             Ref: CallSummarization
#           SUMMARY_SAGEMAKER_ENDPOINT:
#             Ref: SummarizationSagemakerEndpointName
#           ANTHROPIC_API_KEY:
#             Ref: SummarizationLLMThirdPartyApiKey
#           SUMMARY_LAMBDA_ARN:
#             Ref: SummarizationLambdaFunctionArn
#           ANTHROPIC_MODEL_IDENTIFIER: claude-v1.3-100k
#           ANTHROPIC_ENDPOINT_URL: https://api.anthropic.com/v1/complete
#           TOKEN_COUNT:
#             Fn::If:
#               - ProvisionedSageMakerEndpoint
#               - 1024
#               - 0
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#         - Statement:
#             - Sid: InvokeGetTranscript
#               Effect: Allow
#               Action:
#                 - lambda:InvokeFunction
#               Resource:
#                 Fn::GetAtt:
#                   - SFFetchTranscript
#                   - Arn
#             - Sid: InvokeBedrock
#               Effect: Allow
#               Action:
#                 - bedrock:InvokeModel
#               Resource:
#                 - Fn::Sub: arn:${AWS::Partition}:bedrock:*::foundation-model/*
#                 - Fn::Sub: arn:${AWS::Partition}:bedrock:*:${AWS::AccountId}:custom-model/*
#             - Fn::If:
#                 - HasAnthropicSummary
#                 - Sid: SecretsManagerPolicy
#                   Effect: Allow
#                   Action:
#                     - secretsmanager:GetResourcePolicy
#                     - secretsmanager:GetSecretValue
#                     - secretsmanager:DescribeSecret
#                     - secretsmanager:ListSecretVersionIds
#                   Resource:
#                     Ref: SummarizationLLMThirdPartyApiKey
#                 - Ref: AWS::NoValue
#             - Fn::If:
#                 - ProvisionedSageMakerEndpoint
#                 - Sid: InvokeSummarizer
#                   Effect: Allow
#                   Action:
#                     - sagemaker:InvokeEndpoint
#                   Resource:
#                     Ref: SummarizationSagemakerEndpointArn
#                 - Ref: AWS::NoValue
#             - Fn::If:
#                 - HasCustomSummarizerLambda
#                 - Sid: SummarizationLambda
#                   Effect: Allow
#                   Action:
#                     - lambda:InvokeFunction
#                   Resource:
#                     Ref: SummarizationLambdaFunctionArn
#                 - Ref: AWS::NoValue
#   SFAwaitNotification:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-wait-for-transcribe-notification.lambda_handler
#       Environment:
#         Variables:
#           TableName:
#             Ref: TableName
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
#   SFTranscribeFailed:
#     Type: AWS::Serverless::Function
#     Properties:
#       CodeUri: s3://aws-ml-blog-us-east-1/artifacts/pca/0.7.4/31e932cf51a204dddbd676f58fc8d7a8
#       Handler: pca-aws-sf-transcribe-failed.lambda_handler
#       Environment:
#         Variables:
#           RoleArn:
#             Fn::GetAtt:
#               - TranscribeRole
#               - Arn
#       Policies:
#         - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
#         - arn:aws:iam::aws:policy/AmazonS3FullAccess
#   LogGroup:
#     Type: AWS::Logs::LogGroup
#     Properties:
#       LogGroupName:
#         Fn::Sub: /aws/vendedlogs/${StepFunctionName}
#       RetentionInDays: 90
#   Role:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Statement:
#           - Effect: Allow
#             Principal:
#               Service: states.amazonaws.com
#             Action: sts:AssumeRole
#       Policies:
#         - PolicyName: AllowInvokeFunctions
#           PolicyDocument:
#             Statement:
#               - Effect: Allow
#                 Action: lambda:InvokeFunction
#                 Resource:
#                   - Fn::GetAtt:
#                       - SFExtractJobHeader
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFExtractTranscriptHeader
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFProcessTurn
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFStartTranscribeJob
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFAwaitNotification
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFTranscribeFailed
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFFinalProcessing
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFCTRGenesys
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFPostCTRProcessing
#                       - Arn
#                   - Fn::GetAtt:
#                       - SFSummarize
#                       - Arn
#         - PolicyName: CloudWatchLogs
#           PolicyDocument:
#             Statement:
#               - Effect: Allow
#                 Action:
#                   - logs:CreateLogDelivery
#                   - logs:GetLogDelivery
#                   - logs:UpdateLogDelivery
#                   - logs:DeleteLogDelivery
#                   - logs:ListLogDeliveries
#                   - logs:PutResourcePolicy
#                   - logs:DescribeResourcePolicies
#                   - logs:DescribeLogGroups
#                 Resource: "*"
#   StateMachine:
#     Type: AWS::StepFunctions::StateMachine
#     Properties:
#       StateMachineName:
#         Ref: StepFunctionName
#       DefinitionS3Location:
#         Bucket: aws-ml-blog-us-east-1
#         Key: artifacts/pca/0.7.4/4fd2960cc2d5822d870fe17941c4295a
#       DefinitionSubstitutions:
#         SFExtractJobHeaderArn:
#           Fn::GetAtt:
#             - SFExtractJobHeader
#             - Arn
#         SFExtractTranscriptHeaderArn:
#           Fn::GetAtt:
#             - SFExtractTranscriptHeader
#             - Arn
#         SFProcessTurnArn:
#           Fn::GetAtt:
#             - SFProcessTurn
#             - Arn
#         SFStartTranscribeJobArn:
#           Fn::GetAtt:
#             - SFStartTranscribeJob
#             - Arn
#         SFAwaitNotificationArn:
#           Fn::GetAtt:
#             - SFAwaitNotification
#             - Arn
#         SFTranscribeFailedArn:
#           Fn::GetAtt:
#             - SFTranscribeFailed
#             - Arn
#         SFFinalProcessingArn:
#           Fn::GetAtt:
#             - SFFinalProcessing
#             - Arn
#         SFCTRGenesysArn:
#           Fn::GetAtt:
#             - SFCTRGenesys
#             - Arn
#         SFPostCTRProcessingArn:
#           Fn::GetAtt:
#             - SFPostCTRProcessing
#             - Arn
#         SFSummarizeArn:
#           Fn::GetAtt:
#             - SFSummarize
#             - Arn
#       LoggingConfiguration:
#         Level: ERROR
#         IncludeExecutionData: true
#         Destinations:
#           - CloudWatchLogsLogGroup:
#               LogGroupArn:
#                 Fn::GetAtt:
#                   - LogGroup
#                   - Arn
#       RoleArn:
#         Fn::GetAtt:
#           - Role
#           - Arn
# Outputs:
#   RolesForKMSKey:
#     Value:
#       Fn::Join:
#         - ", "
#         - - Fn::Sub: '"${TranscribeLambdaRole.Arn}"'
#           - Fn::Sub: '"${TranscribeRole.Arn}"'
#           - Fn::Sub: '"${SFProcessTurnRole.Arn}"'
#           - Fn::Sub: '"${SFFinalProcessingRole.Arn}"'
#           - Fn::Sub: '"${SFCTRGenesysRole.Arn}"'
#           - Fn::Sub: '"${SFTranscribeFailedRole.Arn}"'
#           - Fn::Sub: '"${SFPostCTRProcessingRole.Arn}"'
#   FetchTranscriptArn:
#     Value:
#       Fn::GetAtt:
#         - SFFetchTranscript
#         - Arn
#   SummarizerArn:
#     Value:
#       Fn::GetAtt:
#         - SFSummarize
#         - Arn
